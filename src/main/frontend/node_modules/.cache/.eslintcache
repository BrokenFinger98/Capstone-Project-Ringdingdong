[{"/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/index.js":"1","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/reportWebVitals.js":"2","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/App.js":"3","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/maps.js":"4","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/login/login.js":"5","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/introduce/introduce.js":"6","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/newAccount/newAccount.js":"7","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/upload/upload.js":"8","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/frame/frame.js":"9","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/chart/chart.js":"10","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/logo.js":"11","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/community/writing.js":"12","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/community/board.js":"13","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/community/post.js":"14","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/newAccountInfo/newAccountInfo.js":"15"},{"size":534,"mtime":1701173952000,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1701350984000,"results":"18","hashOfConfig":"17"},{"size":2341,"mtime":1702005417000,"results":"19","hashOfConfig":"17"},{"size":3752,"mtime":1702005707000,"results":"20","hashOfConfig":"17"},{"size":4185,"mtime":1701992358000,"results":"21","hashOfConfig":"17"},{"size":1394,"mtime":1701173952000,"results":"22","hashOfConfig":"17"},{"size":6551,"mtime":1701952212000,"results":"23","hashOfConfig":"17"},{"size":5167,"mtime":1702009900281,"results":"24","hashOfConfig":"17"},{"size":2666,"mtime":1702005541000,"results":"25","hashOfConfig":"17"},{"size":4564,"mtime":1702005495000,"results":"26","hashOfConfig":"17"},{"size":388,"mtime":1702005422000,"results":"27","hashOfConfig":"17"},{"size":3233,"mtime":1702008114000,"results":"28","hashOfConfig":"17"},{"size":2742,"mtime":1702008120000,"results":"29","hashOfConfig":"17"},{"size":2632,"mtime":1702008103000,"results":"30","hashOfConfig":"17"},{"size":1472,"mtime":1701920335000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"osfh6n",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},"/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/index.js",[],[],"/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/reportWebVitals.js",[],[],"/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/App.js",[],[],"/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/maps.js",[],[],"/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/login/login.js",[],[],"/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/introduce/introduce.js",["83"],[],"import {Frame, Banner, Footer} from '../frame/frame.js';\nimport './introduce.css';\nfunction Introduce(){\n\n    const 설명 =\n`차량 운행의 효율성과 도로 안전을 높이기 위한 귀하의 노력에 감사드립니다.\n\n이 웹사이트는 시각화 기술을 통해 도로 혼잡도와 각 교차로의 시간당 차종별 차량 수를\n쉽게 이해할 수 있도록 돕습니다.\n\n운전자들과 교통 관리 담당관들이 보다 빠르고 정확한 결정을 내릴 수 있도록 지원하며,\n이를 통해 교통 체증 문제를 해결하고 안전한 운전 환경을 조성하는 데 도움이 될 것입니다.\n\n함께 도로 교통의 미래를 더욱 밝고 안전하게 만들어가길 기대합니다.`;\n    \n    const 페이지이름 = \"서비스 소개\";\n\n    return (\n        <div>\n            <Frame/>\n            <Banner name={페이지이름}/>\n                <div className='content'>\n                    <img src=\"drone.jpg\" width=\"400px\"/>\n                    <div id=\"서비스소개텍스트\">\n                        <div>안녕하세요 DTCA(Drone Traffic Congestion Analysis)입니다!</div>\n                        <h3>저희 웹사이트를 방문해주셔서 감사합니다!</h3>\n                        <pre>{설명}</pre>\n                    </div>\n                </div>\n            <Footer/>\n        </div>\n\n    );\n}\nexport default Introduce;","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/newAccount/newAccount.js",["84","85","86","87","88","89","90"],[],"import React, { useState, Component } from 'react';\nimport {Logo} from '../../logo.js';\nimport axios from 'axios';\n\nimport './newAccount.css';\n\nconst 요구사항 = [{\n    id:'아이디',\n    name : 'id',\n    inputType:'text',\n    btn: true,\n    addOn : true,\n    addClass:'',\n    err:'영문, 숫자만 조합 (영문 필수 포함)하여 2자 이상 16자 이하로 입력해주세요.'\n},{\n    id:'비밀번호',\n    name : 'pw',\n    inputType:'password',\n    inputBox2:true,\n    addOn : true,\n    addClass:'display-column ',\n    err:'영문 소문자, 숫자를 조합하여 8자 이상 20자 이하로 입력해주세요.'\n},{\n    id:'이름',\n    name : 'name',\n    inputType:'text',\n    addClass:''\n},{\n    id:'전화번호',\n    name : 'callNum',\n    inputType:'text',\n    addClass:''\n},{\n    id:'이메일',\n    name : 'email',\n    inputType:'text',\n    inputBox2:true,\n    at:true,\n    addClass:''\n}];\n\nconst 요구사항기관 = [{\n    id:'아이디',\n    name : 'id',\n    inputType : 'text',\n    btn : true,\n    addOn : true,\n    addClass: '',\n    err:'영문 소문자, 숫자를 조합하여 8자 이상 20자 이하로 입력해주세요.',\n},{\n    id:'비밀번호',\n    name : 'pw',\n    inputType : 'password',\n    inputBox2 : true,\n    addOn : true,\n    addClass:'display-column ',\n    err:'영문 소문자, 숫자를 조합하여 8자 이상 20자 이하로 입력해주세요.'\n},{\n    id:'기관명',\n    name : 'name',\n    inputType : 'text',\n    addClass: '',\n},{\n    id:'대표자명',\n    name : 'institutionCEO',\n    inputType : 'text',\n    addClass: '',\n},{\n    id:'사업자 등록번호',\n    name : 'registrationNumber',\n    inputType : 'number',\n    addClass: '',\n    pattern:\"[0-9]{3}-[0-9]{4}-[0-9]{4}\"\n},{\n    id:'이메일',\n    name : 'email',\n    inputType : 'text',\n    inputBox2 : true,\n    at: true,\n    addClass: '',\n},{\n    id:'전화번호',\n    name : 'callNum',\n    inputType : 'number',\n    addClass: '',\n}]\n\nclass NewAccout extends Component {\n    \n    state = {\n        subject : this.props.code,\n        data : this.props.code === 'member' ? 요구사항 : 요구사항기관,\n        menu : this.props.code === 'member' ? '일반회원가입' : '기관회원가입'\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const target = event.target;\n        if (target.pw.value !== target.pw2.value){\n            alert('비밀번호가 일치하지 않습니다.'); //비밀번호 유효성 체크\n            return 0;\n        }\n\n        const dataSet = {\n            loginId : target.id.value,\n            password : target.pw.value,\n            name : target.name.value,\n            phoneNumber : target.callNum.value,\n            email : target.email.value+'@'+target.email2.value,\n        };\n\n        if (this.props.code !== 'member'){ //기관 사용자 \n            dataSet.institutionCEO = target.institutionCEO.value;\n            dataSet.registrationNumber = target.registrationNumber.value;\n        }\n\n        const url = '/join/' + this.state.subject;\n        axios.post(url,dataSet)\n        .then(res => {\n            alert('회원가입성공, 메인 화면으로 돌아갑니다.');\n            window.location.href='/';\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    render(){\n    return (\n        <div className=\"containAccount\">\n            <Logo/>\n            <h2>{this.state.menu}</h2>\n            <div className=\"회원가입정보\">\n                <form onSubmit={this.handleSubmit}>\n                    <Input한칸 data={this.state.data[0]}/>\n                    <Input한칸 data={this.state.data[1]}/> \n                    <Input한칸 data={this.state.data[2]}/> \n                    <Input한칸 data={this.state.data[3]}/>\n                    <Input한칸 data={this.state.data[4]}/>\n                    {this.state.data === 요구사항 ? '' : <Input한칸 data={this.state.data[5]}/>}\n                    {this.state.data === 요구사항 ? '' : <Input한칸 data={this.state.data[6]}/>}\n                <br/><br/>\n                <button className='회원가입버튼'\n                    style={{'background-color':'#0C09AB'}}\n                    type=\"submit\">\n                    회원가입\n                </button>\n                </form>\n            </div>\n        </div>\n    );\n}\n}\n\nfunction Input한칸({data}){\n    const [inputValue, setInputValue] = useState('');\n    const [inputValue2, setInputValue2] = useState('');\n\n    const handleInputChange = (event) => {\n        const valueWithoutSpaces = event.target.value.replace(/\\s/g, '');\n        setInputValue(valueWithoutSpaces);\n      };\n\n    const handleInputChange2 = (event) => {\n        const valueWithoutSpaces2 = event.target.value.replace(/\\s/g, '');\n        setInputValue2(valueWithoutSpaces2);\n      };\n\n    const checkDuplicate = ()=>{\n        const dataSet = {\n            loginId:document.getElementById('아이디').value,\n            email:document.getElementById('이메일').value,\n        }\n        axios.post('/join/checkDuplicateLoginId',dataSet)\n        .then(res => {\n            console.log(res.data);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <div className =\"회원가입정보한칸\">\n            <p className = \"요구사항항목\">{data.id}</p>\n            <div className=\"요구사항인풋과버튼박스\">\n                <div className={data.addClass+\"요구사항인풋과버튼\"}>\n                    <input\n                    type={data.inputType}\n                    name={data.name}\n                    id ={data.id}\n                    placeholder={data.id+\"를 입력하세요\"}\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    pattern={data.pattern}\n                    required/>\n                    {data.at ? <p>@</p>:'' }\n                    { data.inputBox2 === true ? \n                     <input\n                     type={data.inputType}\n                     name={data.name+'2'}\n                     placeholder={data.id+\"를 입력하세요\"}\n                     value={inputValue2}\n                     onChange={handleInputChange2}\n                     required/>:''}\n                    { data.btn ? <button type=\"button\" className=\"btnCheck\" onClick={checkDuplicate}>중복체크</button> : ''}\n                </div>\n                { data.addOn ? <p className=\"경고메시지\">{data.err}</p>:''}\n            </div>\n    </div>\n    );\n}\n\nexport default NewAccout;","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/upload/upload.js",[],[],"/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/frame/frame.js",[],[],"/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/chart/chart.js",["91"],[],"import { XAxis, YAxis, CartesianGrid, Legend, ReferenceLine } from 'recharts';\nimport { LineChart, Line } from 'recharts';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction 요일체인저(요일){\n  switch(요일){\n    case '월':\n      return 'MON';\n    case '화':\n      return 'TUE';\n    case '수':\n      return 'WED';\n    case '목':\n      return 'THU';\n    case '금':\n      return 'FRI';\n    case '토':\n      return 'SAT';\n    case '일':\n      return 'SUN';\n  }\n}\n\nasync function 데이터가져와({marker},요일){\n    const res = 요일체인저(요일);\n    const command = '/traffic/'+res+'/'+marker;\n    const response = await axios.get(command);\n    return response.data;\n  }\n\nfunction RenderChart({marker}){\n  const [isActive, setToggleState] = useState(false);\n  const handleButtonClick = () => {\n      setToggleState(!isActive);\n    };\n\n  const [dataSet, changeData] = useState([]);\n\n  const toggleOn = async (event) =>{\n    try{\n      const 가져온데이터 = await 데이터가져와({marker},event.target.textContent); //데이터 잘 넘어오면 넘기는 data는 이 데이터.\n      changeData(가져온데이터);\n    }catch(err){\n      console.log(err);\n    }\n    \n    const btn = document.getElementById('토글버튼').querySelectorAll('button')\n      btn.forEach((child)=>{\n        child.classList.add('투명화');\n        child.classList.remove('불투명화');\n      });\n      event.target.classList.add('불투명화');\n  }\n\n  const buttonClass = isActive ? '투명화' : '불투명화';\n  const buttonClass2 = isActive ? '불투명화' : '투명화';\n  const 보일까안보일까 = isActive ? '보인다' : '안보인다';\n  const 안보일까보일까 = isActive ? '안보인다' : '보인다';\n\n  return(\n    <div className=\"차트\">\n      <div>차량별 이동량</div>\n      <div className=\"토글버튼박스\">\n        <button className={buttonClass} id=\"혼잡도버튼\" onClick={handleButtonClick}>혼잡도</button>\n        <button className={buttonClass2} id=\"차량버튼\" onClick={handleButtonClick}>차량</button>\n      </div><br/>\n      <div id = \"토글버튼\">\n        <button onClick={toggleOn}>월</button>\n        <button onClick={toggleOn}>화</button>\n        <button onClick={toggleOn}>수</button>\n        <button onClick={toggleOn}>목</button>\n        <button onClick={toggleOn}>금</button>\n        <button onClick={toggleOn}>토</button>\n        <button onClick={toggleOn}>일</button>\n      </div><br/>\n      <div className={보일까안보일까}>\n        <RenderBarChart data={dataSet}/>\n      </div>\n      <div className={안보일까보일까}>\n        <RenderStringChart data={dataSet}/>\n      </div>\n    </div>\n  );\n}\n\nfunction RenderBarChart({data}){\n    return(\n      <LineChart width={450} height={350} data={data}>\n      <Line type=\"monotone\" dataKey=\"congestion\" stroke=\"blue\" strokeWidth={2.5}/>\n        <CartesianGrid stroke=\"#ccc\" horizontalPoints={[1, 2]} /> \n        <XAxis dataKey=\"hour\" interval={2}/>\n        <YAxis interval={1} domain={[0,100]}\n        ticks={[0, 50, 100]}\n        tickFormatter={(value) => {\n          switch (value) {\n            case 0:\n              return '원활';\n            case 50:\n              return '서행';\n            case 100:\n              return '혼잡';\n            default:\n              return value;\n          }\n        }}\n        label={{ value: '서행'}}\n        />\n      <ReferenceLine y={50} stroke=\"lightgrey\" />\n        <Legend align='center' \n         payload={[\n          { value: '혼잡도', type: 'line', color: '#8884d8' },]}/>\n\n    </LineChart>\n    );   \n}\n\nfunction RenderStringChart({data}){\nreturn (\n    <LineChart width={450} height={350} data={data}>\n      <Line type=\"monotone\" dataKey=\"numberOfCar\" stroke=\"#333333\" strokeWidth={1.5}/>\n      <Line type=\"monotone\" dataKey=\"numberOfTruck\" stroke=\"#3333FF\" strokeWidth={1.5}/>\n      <Line type=\"monotone\" dataKey=\"numberOfMotorcycle\" stroke=\"#D62124\" strokeWidth={1.5}/>\n      <Line type=\"monotone\" dataKey=\"numberOfBus\" stroke=\"#55aa33\" strokeWidth={1.5}/>\n      <CartesianGrid stroke=\"#ccc\" />\n      <XAxis dataKey=\"hour\" interval={2}/>\n      <YAxis />\n      <Legend align='center' iconType=\"circle\"\n      payload={[\n        { value: '차량', type: 'line', color: '#333333' },\n        { value: '트럭', type: 'line', color: '#3333FF' },\n        { value: '이륜차', type: 'line', color: '#D62124' },\n        { value: '버스', type: 'line', color: '#55aa33' },\n      ]}\n      />\n\n    </LineChart>\n  );\n}\n\nexport default RenderChart;","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/logo.js",[],[],"/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/community/writing.js",["92","93"],[],"import './board.css';\nimport {Frame, Banner, ContentNav, Footer} from '../frame/frame.js';\nimport axios from 'axios';\nimport { Component } from 'react';\nimport { Navigate } from 'react-router-dom';\n\nexport default class Writing extends Component{\n    state = {\n        title : '',\n        contents : '',\n    }\n\n    changeTitle = (event) => {\n        this.setState({title:event.target.value})\n    }\n\n    changeArea = (event) => {\n        this.setState({contents:event.target.value})\n    }\n    \n    writeContent = async () =>{\n        const dataSet ={\n            title : this.state.title,\n            contents : this.state.contents,\n        };\n    \n        const axiosConfig = {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem('jwtToken')}`,\n            },\n        };    \n                    \n        const res = await axios.post('/board/save',dataSet,axiosConfig).then(()=>{\n            alert('게시글이 저장되었습니다');\n        });\n        \n    }\n\n    render(){\n    return (\n        <div>\n            <Frame/>\n            <Banner name={'게시판'}/>\n            <ContentNav name={'게시판'}/>\n            <div className='communityContentBox'>\n                <h1>글쓰기</h1>\n                <div className=\"formBox\">\n                        <div>\n                            <label>제목</label><br/><br/>\n                            <input \n                            type=\"text\"\n                            id=\"contentSubject\"\n                            placeholder='제목을 입력하세요'\n                            onChange = {this.changeTitle}\n                            value = {this.state.title}\n                            required\n                            /><br/><br/><br/>\n                        </div>\n\n                        <div>\n                            <label>내용</label><br/><br/>\n                            <textarea \n                            id=\"contentTextBox\"\n                            placeholder='내용을 입력하세요'\n                            onChange={this.changeArea}\n                            value = {this.state.contents}\n                            required\n                            />\n                        <br/><br/><br/>\n                        </div>\n\n                        <div>\n                            <label>이미지 삽입</label><br/><br/>\n                            <input type=\"text\"\n                            placeholder='10Mb이하의 jpg, png 파일만 업로드 가능합니다.'\n                            disabled\n                            />\n                            <button className=\"btnSubmit\" id=\"btnFile\">파일선택</button>\n                            <button className=\"btnSubmit btnWhite\">취소</button>\n                            <br/><br/><br/><br/>\n                        </div>\n                </div>\n                <div className=\"submit\">\n                    <button className =\"btnSubmit\" onClick={this.writeContent}>제출</button>\n                    <button className =\"btnSubmit btnWhite\" onClick={()=>{this.props.history.push('/board');}}>취소</button>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n\n    );\n    }\n}","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/community/board.js",[],[],"/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/community/post.js",["94"],[],"\nimport { Component } from \"react\";\nimport {Frame, Banner, ContentNav, Footer} from '../frame/frame.js';\nimport axios from 'axios';\n\nimport './post.css';\nexport default class Post extends Component{\n    state = {\n        content:{\n            title:'test제목입니다',\n            contents : 'test 내용입니다',\n            writer:'@작성자',\n            modifiedTime:'작성시간'\n        },\n    }\n    \n    componentDidMount() {\n        this.getDataFromDB();\n    }\n\n    getDataFromDB = async () => {\n        const searchParams = new URLSearchParams(window.location.search);\n        const id = searchParams.get('id');\n        const url = '/board/' + id;\n\n        const axiosConfig = {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem('jwtToken')}`,\n            },\n        };\n        const res = await axios.get(url,axiosConfig);\n        this.setState({content : res.data});\n    }\n\n    deleteContents = async () => {\n        const searchParams = new URLSearchParams(window.location.search);\n        const id = searchParams.get('id');\n        const url = '/board/' + id;\n        const axiosConfig = {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem('jwtToken')}`,\n            },\n        };\n        const res = await axios.delete(url,axiosConfig).then(()=>{\n            alert('게시글이 삭제되었습니다');\n        });\n        \n        \n    }\n\n    render(){   \n        const {content} =  this.state;\n        if (content === null || content === undefined) {\n            return <p>Loading...</p>;\n        }\n        \n    return(\n    <div>\n        <Frame/>\n        <Banner name={'커뮤니티'}/>\n        <ContentNav name={'커뮤니티'}/>\n        <div className='communityContentBox'>\n                <div className=\"post\">\n                        <div className=\"postTitleBox\">\n                            <div className=\"postTitle\">{content.title}</div>\n                            <div className=\"postTitleDate\">{content.writer}</div>\n                            <div>{content.modifiedTime}</div>\n                        </div>\n                        <div className=\"postContent\">{content.contents}</div>\n                        <div className=\"postCommentBox\">\n                            {\n                            //content.comment.map((data)=>{this.renderComment(data)})\n                            }\n                        </div>\n                </div>\n                <br/><br/>\n                <button className =\"btnWriting\" onClick={this.deleteContents}>삭제</button>\n        </div>\n        <Footer/>\n    </div>\n    );\n\n    }\n}","/Users/yu-sun00/Desktop/세종대/4-2학기/캡스톤/capstone/src/main/frontend/src/components/newAccountInfo/newAccountInfo.js",["95","96","97"],[],"import React, { Component } from 'react';\n\nimport {Logo} from '../../logo.js';\n\nimport './newAccountInfo.css';\n\nimport { Link } from 'react-router-dom';\n\nclass NewAccount extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"containerBox2\">\n                <Logo/>\n                <h2>회원가입</h2>\n                <div className = \"btnBox\">\n                    <Link to=\"/newAccountGeneral\">\n                    <button>\n                        <img src=\"icon개인.png\" />\n                        <p className=\"버튼기능설명\">일반회원</p>\n                        <p className =\"버튼세부설명\">개인 회원가입</p>\n                    </button>\n                    </Link>\n                    <Link to=\"/newAccountGov\">\n                    <button>\n                        <img src=\"icon기업.png\" width=\"100px\"/>\n                        <p className=\"버튼기능설명\">기업/기관</p>\n                        <p className =\"버튼세부설명\">기업 및 기관 회원가입</p>\n                    </button>\n                    </Link>\n                </div>\n                <br/>\n                <p className=\"버튼아래설명\">회원구분에 따라 가입절차에 차이가 있으니 반드시 본인에 해당하는 경우를 선택해 주시기 바랍니다.</p>\n                <br/><br/>\n            </div>\n        );\n    }\n}\n\nexport default NewAccount;",{"ruleId":"98","severity":1,"message":"99","line":23,"column":21,"nodeType":"100","endLine":23,"endColumn":57},{"ruleId":"101","severity":1,"message":"102","line":135,"column":21,"nodeType":"100","messageId":"103","endLine":135,"endColumn":57},{"ruleId":"101","severity":1,"message":"102","line":136,"column":21,"nodeType":"100","messageId":"103","endLine":136,"endColumn":57},{"ruleId":"101","severity":1,"message":"102","line":137,"column":21,"nodeType":"100","messageId":"103","endLine":137,"endColumn":57},{"ruleId":"101","severity":1,"message":"102","line":138,"column":21,"nodeType":"100","messageId":"103","endLine":138,"endColumn":57},{"ruleId":"101","severity":1,"message":"102","line":139,"column":21,"nodeType":"100","messageId":"103","endLine":139,"endColumn":57},{"ruleId":"101","severity":1,"message":"102","line":140,"column":54,"nodeType":"100","messageId":"103","endLine":140,"endColumn":90},{"ruleId":"101","severity":1,"message":"102","line":141,"column":54,"nodeType":"100","messageId":"103","endLine":141,"endColumn":90},{"ruleId":"104","severity":1,"message":"105","line":7,"column":3,"nodeType":"106","messageId":"107","endLine":22,"endColumn":4},{"ruleId":"108","severity":1,"message":"109","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":18},{"ruleId":"108","severity":1,"message":"112","line":33,"column":15,"nodeType":"110","messageId":"111","endLine":33,"endColumn":18},{"ruleId":"108","severity":1,"message":"112","line":44,"column":15,"nodeType":"110","messageId":"111","endLine":44,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":10,"column":5,"nodeType":"115","messageId":"116","endLine":12,"endColumn":6},{"ruleId":"98","severity":1,"message":"99","line":22,"column":25,"nodeType":"100","endLine":22,"endColumn":49},{"ruleId":"98","severity":1,"message":"99","line":29,"column":25,"nodeType":"100","endLine":29,"endColumn":62},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component Input한칸 must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]